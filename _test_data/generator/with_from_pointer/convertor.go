// Code generated by datamapper.
// https://github.com/underbek/datamapper

// Package with_from_pointer is a generated datamapper package.
package with_from_pointer

import (
	"errors"
	"fmt"

	"github.com/underbek/datamapper/converts"
)

// ConvertFromToTo convert *From by tag map to To by tag map
func ConvertFromToTo(from *From) (To, error) {
	if from == nil {
		return To{}, errors.New("From is nil")
	}

	fromUUID, err := converts.ConvertStringToDecimal(from.UUID)
	if err != nil {
		return To{}, fmt.Errorf("convert From.UUID -> To.ID failed: %w", err)
	}

	fromAge, err := converts.ConvertStringToSigned[int8](from.Age)
	if err != nil {
		return To{}, fmt.Errorf("convert From.Age -> To.Age failed: %w", err)
	}

	return To{
		ID:   fromUUID,
		Name: from.Name,
		Age:  fromAge,
	}, nil
}

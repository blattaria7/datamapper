// Code generated by datamapper.
// https://github.com/underbek/datamapper

// Package mapper is a generated datamapper package.
package mapper

import (
	"errors"

	f "github.com/underbek/datamapper/_test_data/mapper/recursive/from"
	t "github.com/underbek/datamapper/_test_data/mapper/recursive/to"
	"github.com/underbek/datamapper/converts"
)

// ConvertFOperationToTOperation convert f.Operation by tag recursive to *t.Operation by tag recursive
func ConvertFOperationToTOperation(from f.Operation) *t.Operation {
	return &t.Operation{
		ID:     converts.ConvertOrderedToOrdered[int64, uint64](from.ID),
		Status: from.Status,
	}
}

// ConvertTOperationToFOperation convert *t.Operation by tag recursive to f.Operation by tag recursive
func ConvertTOperationToFOperation(from *t.Operation) (f.Operation, error) {
	if from == nil {
		return f.Operation{}, errors.New("Operation is nil")
	}

	return f.Operation{
		ID:     converts.ConvertOrderedToOrdered[uint64, int64](from.ID),
		Status: from.Status,
	}, nil
}
